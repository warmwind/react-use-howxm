{"version":3,"sources":["../../src/dependencies.ts","../../src/index.ts","App.jsx","index.jsx"],"names":["myLogger","console","info","App","useHowxm","initHowxm","identifyHowxm","useEffect","ReactDOM","render","document","getElementById"],"mappings":"yLAuBM,SAAU,EACd,GAEA,IAAM,EAA8B,qBAAX,OACzB,IAAK,EAAW,MAAM,MAAM,iDAI5B,GA7B8B,SAC9B,EACA,GAEA,IACE,IAGM,EAHiB,SAAS,eAC9B,IAE+B,SAAS,cAAc,UAOxD,OANA,EAAO,GAAK,EACZ,EAAO,UAAY,EACnB,EAAO,YAAc,YAErB,SAAS,KAAK,YAAY,IAEnB,EACP,MAAM,GACN,OAAO,GAWU,CADA,gHAAgH,EAAK,2NACxF,sBAG9C,GACC,OAA2C,OAE5C,OAAO,EAGT,MAAM,MAAM,gCC9BA,SAAU,IACtB,IAAM,ID+C8B,qBAAX,SACD,OAA2C,QC/C7D,EAA8B,WAClC,mBAAQ,WAAM,WAAc,CAAC,KADxB,EAAU,KAAE,EAAa,KAI1B,EAAY,uBAChB,SACE,EACA,GAEA,IAME,OALA,EAAW,GACX,GAAc,GACV,GAAsC,oBAAhB,GACxB,EAAY,sBAEP,EACP,MAAO,GAEP,OADA,QAAQ,MAAM,gBAAiB,EAAgB,UACxC,KAGX,IAGI,EAAgB,uBACpB,SACE,EACA,GAEA,IAME,ODJF,SACJ,GAGA,GADoC,qBAAX,QACP,OAA2C,OAC3D,OAAQ,OAA2C,OACjD,WACA,GAIJ,MAAM,MAAM,iDCZN,CAAe,GAEX,GAAsC,oBAAhB,GACxB,EAAY,qBAEP,EACP,MAAO,GAGP,OAFA,QAAQ,MAAM,gBAAiB,EAAgB,UAExC,KAGX,IAGF,OAAO,mBACL,WAAM,MAAC,CACL,WAAU,EACV,UAAW,EACX,cAAe,KAEjB,CAAC,EAAY,EAAW,ICzD5B,IAAMA,EAAWC,QAAQC,KAiBVC,EAfH,WACV,MAAmCC,IAA5BC,EAAP,EAAOA,UAAWC,EAAlB,EAAkBA,cAQlB,OAPAC,qBAAU,WACQF,EAAU,uCAAwCL,IAEhEM,EAAc,CAAC,IAAO,aAEvB,CAACD,EAAWC,IAGb,6BACE,+CCZNE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.26ba0e6a.chunk.js","sourcesContent":["import * as React from 'react';\nimport { useMemo, useCallback } from 'react';\n\nvar appendHeadScript = function (scriptText, scriptId) {\n    try {\n        var existentScript = document.getElementById(scriptId);\n        var script = existentScript || document.createElement('script');\n        script.id = scriptId;\n        script.innerText = scriptText;\n        script.crossOrigin = 'anonymous';\n        document.head.appendChild(script);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n};\nfunction initScript(appId) {\n    var hasWindow = typeof window !== 'undefined';\n    if (!hasWindow)\n        throw Error('Howxm depends on window. Window is undefined.');\n    var scriptCode = \"function _howxm(){_howxmQueue.push(arguments)} window._howxmQueue=window._howxmQueue||[]; _howxm(\\\"setAppID\\\",\\\"\" + appId + \"\\\"); (function(){var e=document.createElement(\\\"script\\\"), t=document.getElementsByTagName(\\\"script\\\")[0]; e.type=\\\"text/javascript\\\"; e.defer=!0;e.src=\\\"https://static.howxm.com/sdk.js\\\"; t.parentNode.insertBefore(e,t)})(); \";\n    var isAppended = appendHeadScript(scriptCode, 'howxm-init-script');\n    if (isAppended &&\n        hasWindow &&\n        window._howxm) {\n        return true;\n    }\n    throw Error('Howxm initialization failed!');\n}\nfunction identifyScript(userInfo) {\n    var hasWindow = typeof window !== 'undefined';\n    if (hasWindow && window._howxm) {\n        return window._howxm('identify', userInfo);\n    }\n    throw Error('Howxm is not available! Is Howxm initialized?');\n}\nfunction checkReadyState() {\n    var hasWindow = typeof window !== 'undefined';\n    return !!(hasWindow && window._howxm);\n}\n\nfunction useHowxm() {\n    var isReadyState = checkReadyState();\n    var _a = React.useState(useMemo(function () { return isReadyState; }, [isReadyState])), readyState = _a[0], setReadyState = _a[1];\n    var initHowxm = useCallback(function (appId, logCallback) {\n        try {\n            initScript(appId);\n            setReadyState(true);\n            if (logCallback && typeof logCallback === 'function')\n                logCallback(\"Howxm ready: true\");\n            return true;\n        }\n        catch (error) {\n            console.error(\"Howxm error: \" + error.message);\n            return false;\n        }\n    }, []);\n    var identifyHowxm = useCallback(function (userInfo, logCallback) {\n        try {\n            identifyScript(userInfo);\n            if (logCallback && typeof logCallback === 'function')\n                logCallback(\"Howxm identified\");\n            return true;\n        }\n        catch (error) {\n            console.error(\"Howxm error: \" + error.message);\n            return false;\n        }\n    }, []);\n    return useMemo(function () { return ({\n        readyState: readyState,\n        initHowxm: initHowxm,\n        identifyHowxm: identifyHowxm,\n    }); }, [readyState, initHowxm, identifyHowxm]);\n}\n\nexport { useHowxm as default };\n//# sourceMappingURL=index.es.js.map\n",null,"import React from 'react'\nimport { useEffect } from 'react'\n\nimport useHowxm from 'react-use-howxm';\n\nconst myLogger = console.info;\n\nconst App = () => {\n  const {initHowxm, identifyHowxm} = useHowxm()\n  useEffect(() => {\n    const isReady = initHowxm('d8874325-2d50-480b-9c59-458dd616736f', myLogger);\n    if (isReady) {\n      identifyHowxm({'uid': 'my-uid'});\n    }\n  }, [initHowxm, identifyHowxm]);\n\n  return (\n    <div>\n      <h1>Howxm Example</h1>\n    </div>\n  )\n}\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}